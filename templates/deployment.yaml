apiVersion : apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app : backend-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      project: nginx-backend
  template:
    metadata:
      labels:
        project: nginx-backend
    spec:
      containers:
        - name : nginx-backend-container
          image: {{ .Values.container.image }}
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
      imagePullSecrets:
        - name: docker-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-backend-svc
  labels:
    env  : prod
spec:
  selector:
    project: nginx-backend    # Selecting PODS with those Labels
  ports:
    - port : 80  # Port on Load Balance
      targetPort: 80
  type: ClusterIP
#apiVersion : apps/v1
#kind: Deployment
#metadata:
#  name: front-deployment
#  labels:
#    app : front-deployment
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      project: nginx-proxy
#  template:
#    metadata:
#      labels:
#        project: nginx-proxy
#    spec:
#      containers:
#        - name : nginx-backend-container
#          image: {{ .Values.container.image2 }}
#          ports:
#            - containerPort: 80
#      imagePullSecrets:
#        - name: docker-credentials
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: ngnix-proxy-svc
#spec:
#  selector:
#    project: nginx-proxy   # Selecting PODS with those Labels
#  ports:
#    - name      : listener
#      protocol  : TCP
#      port      : 80  # Port on Load Balancer
#      targetPort: 80  # Port on POD
#  type: LoadBalancer
